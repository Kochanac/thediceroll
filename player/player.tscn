[gd_scene load_steps=7 format=3 uid="uid://c6mesg657j6d6"]

[ext_resource type="PackedScene" uid="uid://cxytxq4is2gkj" path="res://player/dice.tscn" id="1"]
[ext_resource type="Script" path="res://player/player.gd" id="2"]
[ext_resource type="PackedScene" uid="uid://mns044ju4edf" path="res://gui/gui.tscn" id="3"]
[ext_resource type="Texture2D" uid="uid://dhe50txmp8jjp" path="res://images/gui/arrow 400.png" id="4"]
[ext_resource type="Script" path="res://player/Stamina.gd" id="6_ijou2"]

[sub_resource type="GDScript" id="GDScript_6354f"]
script/source = "extends Node2D

const SCALE_FACTOR = 400
const MOUSE_SCALE: float = 2.0

const ACTION_MAX_LENGTH: float = Action.MAX_FORCE


# is movement enabled. If false, does not registers actions
var is_disabled = false


var is_aiming = false
var is_slowing = false
var mouse_offset = Vector2(0, 0)

var current_attack = AttackSwipe

var focused_dice: Dice

signal on_action_commanded(action: Action)


func is_time_tampered() -> bool:
	return is_aiming || is_slowing

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	connect(\"on_action_commanded\", $\"..\".on_action_commanded)
	aimWg = preload(\"res://misc/waitgroup.gd\").new()

func scale(velocity, factor=SCALE_FACTOR) -> float:
	return max(
		factor / (velocity + factor + 1) - 0.2,
		0.1
	)

func slow_time() -> void:
	var current_velocity = $\"../DiceGroup/Dice\".linear_velocity.length()
	Engine.time_scale = scale(current_velocity)

func start_time() -> void:
	Engine.time_scale = 1

func start_aim() -> void:
	slow_time()
	is_aiming = true
	self.mouse_offset = Vector2(0, 0)


var aimWg: Waitgroup
func stop_aim(force_timestop: bool = false):
	is_aiming = false
	
	if not force_timestop and $\"../DiceGroup/Dice\".linear_velocity.length() / 100 < 14:
		if not is_slowing and not is_aiming:
			start_time()
		return
	
	aimWg.Add(1)
	await get_tree().create_timer(0.1).timeout
	aimWg.Sub(1)
	if not is_slowing and not is_aiming and aimWg.TryZero():
		start_time()


func focus_dice() -> Dice:
	return $\"../DiceGroup/Dice\"


func _input(event: InputEvent) -> void:
	if is_disabled:
		return
	
	if event is InputEventMouseMotion:
		self.mouse_offset += event.relative

	if event.is_action_pressed(\"LMB\") or event.is_action_pressed(\"RMB\"):
		self.focused_dice = $\"../DiceGroup/Dice\"
		start_aim()
		
	if event.is_action_released(\"LMB\"):
		var force: float = min(mouse_offset.length() * MOUSE_SCALE, ACTION_MAX_LENGTH)
		stop_aim()
		var act: Action = Move.new(mouse_offset, force)
		emit_signal(\"on_action_commanded\", act)
		
		
	if event.is_action_released(\"RMB\"):
		var force: float = min(mouse_offset.length() * MOUSE_SCALE, ACTION_MAX_LENGTH)
		stop_aim(true)
		var act: Action = current_attack.new(mouse_offset, force)
		
		emit_signal(\"on_action_commanded\", act)

	if event.is_action_pressed(\"ui_slow_time\"):
		slow_time()
		is_slowing = true
	if event.is_action_released(\"ui_slow_time\"):
		start_time()
		is_slowing = false


func invinc(time: float) -> void:
	stop_aim()
	start_time()
	is_disabled = true
	$\"../DiceGroup/Dice\".Disable()
	
	var invinc: SceneTreeTimer = get_tree().create_timer(time)
	invinc.connect(\"timeout\", self.invinc_end)

func invinc_end() -> void:
	is_disabled = false
	$\"../DiceGroup/Dice\".Enable()

func _process(_delta: float) -> void:
	if focused_dice == null:
		return

	if is_aiming:
		focused_dice.Aiming(
			mouse_offset,
			min(mouse_offset.length() * MOUSE_SCALE, ACTION_MAX_LENGTH))
	else:
		focused_dice.StopAiming()

"

[node name="Player" type="Node2D"]
script = ExtResource("2")

[node name="DiceGroup" type="Node2D" parent="."]

[node name="Dice" parent="DiceGroup" instance=ExtResource("1")]

[node name="Arrow" parent="DiceGroup/Dice" index="0"]
texture = ExtResource("4")
flip_h = true

[node name="Dice" parent="DiceGroup/Dice" index="2"]
linear_damp = -1.0

[node name="Camera2D" type="Camera2D" parent="DiceGroup/Dice/Dice" index="2"]
current = true
smoothing_enabled = true
smoothing_speed = 50.0
drag_horizontal_enabled = true
drag_vertical_enabled = true
drag_left_margin = 1.0
drag_right_margin = 1.0

[node name="CanvasLayer" type="CanvasLayer" parent="DiceGroup/Dice/Dice/Camera2D"]

[node name="GUI (margin)" parent="DiceGroup/Dice/Dice/Camera2D/CanvasLayer" instance=ExtResource("3")]

[node name="Movement" type="Node2D" parent="."]
script = SubResource("GDScript_6354f")

[node name="Stamina" type="Node" parent="."]
script = ExtResource("6_ijou2")

[editable path="DiceGroup/Dice"]
